version: "3"

services:
  nginx:
    image: nginx:1.15-alpine
    container_name: nginx
    restart: always
    hostname: nginx

    volumes:
      - ./certs:/etc/certs
      - ./nginx:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx

    ports:
      - "80:80"
      - "443:443"

  # LDAP Admin web client
  ldap-admin:
    image: wheelybird/ldap-user-manager:latest
    container_name: ldap-admin
    restart: always

    hostname: ldap-admin
    networks:
      - default
      - ldap

    environment:
      SERVER_HOSTNAME: ldap-admin.dev
      SITE_NAME: "local development ldap"
      NO_HTTPS: "true"
      LDAP_URI: ldap://openldap:1389
      LDAP_BASE_DN: dc=openldap
      LDAP_ADMINS_GROUP: admins
      LDAP_ADMIN_BIND_DN: cn=changeme,dc=openldap
      LDAP_ADMIN_BIND_PWD: changeme
      LDAP_IGNORE_CERT_ERRORS: "true"

  ## Portainer - Docker visualisation and management
  portainer:
    image: portainer/portainer-ce:2.1.1
    container_name: portainer
    restart: always

    hostname: portainer
    networks:
      - default
      - shared
      - ldap

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
      - portainer-data:/data

  ## PG Admin 4 - SQL explorer and Visualization
  pgadmin:
    image: dpage/pgadmin4:5.0
    container_name: pgadmin
    restart: always

    hostname: pgadmin
    networks:
      - default
      - shared
      - ldap

    volumes:
      - pgadmin-data:/var/lib/pgadmin

    environment:
      PGADMIN_DEFAULT_EMAIL: admin@harrison.io
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_LISTEN_PORT: 80
      PGADMIN_CONFIG_AUTHENTICATION_SOURCES: "['ldap', 'internal']"
      PGADMIN_CONFIG_LDAP_SERVER_URI: "'ldap://openldap:1389'"
      PGADMIN_CONFIG_LDAP_CONNECTION_TIMEOUT: 30
      PGADMIN_CONFIG_LDAP_USE_STARTTLS: "False"
      PGADMIN_CONFIG_LDAP_BASE_DN: "'ou=people,dc=openldap'"
      PGADMIN_CONFIG_LDAP_AUTO_CREATE_USER: "True"
      PGADMIN_CONFIG_LDAP_USERNAME_ATTRIBUTE: "'uid'"
      PGADMIN_CONFIG_LDAP_SEARCH_SCOPE: "'SUBTREE'"
      PGADMIN_CONFIG_LDAP_SEARCH_FILTER: "'(cn=*)'"

  ## json-server - mock server for simple testing
  mock:
    image: node:alpine
    hostname: mock
    container_name: json-server-mock
    command: npx json-server --watch db.json --port 80 --host 0.0.0.0
    working_dir: /home/json-server

    expose:
      - "80"

    volumes:
      - ./json-server:/home/json-server

volumes:
  pgadmin-data:
    name: pgadmin-data
  portainer-data:
    name: portainer-data

networks:
  default:
    name: dev-tools

  ldap:
    external: true

  shared:
    external: true
